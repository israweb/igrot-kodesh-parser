#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–º —Å–∞–π—Ç–µ
"""

import sys
import os
sys.path.append('../main')

from text_file_downloader import TextFileDownloader
import time


def test_basic_functionality():
    """–¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –Ω–∞ –ø—Ä–æ—Å—Ç–æ–º —Å–∞–π—Ç–µ"""
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º httpbin.org –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –±–æ—Ç–æ–≤)
    test_url = "https://httpbin.org/html"
    
    print("üß™ ◊ë◊ì◊ô◊ß◊™ ◊û◊ò◊¢◊ô◊ü")
    print("=" * 40)
    print(f"üéØ –¢–µ—Å—Ç–æ–≤—ã–π URL: {test_url}")
    print("üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: test_downloads")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–≥—Ä—É–∑—á–∏–∫
        downloader = TextFileDownloader(test_url, "test_downloads")
        
        print("‚è≥ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
        start_time = time.time()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        downloader.crawl_and_download(
            max_depth=1, 
            delay=0.5, 
            extract_page_content=True
        )
        
        end_time = time.time()
        duration = end_time - start_time
        
        print(f"‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ {duration:.2f} —Å–µ–∫—É–Ω–¥")
        print("üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É 'test_downloads' –∏ –ª–æ–≥ '../logs/downloader.log'")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False


def test_with_alternative_url():
    """–¢–µ—Å—Ç —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º —Å–∞–π—Ç–æ–º"""
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º example.com - –ø—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    test_url = "http://example.com"
    
    print("\nüß™ ◊ë◊ì◊ô◊ß◊™ ◊û◊ò◊¢◊ô◊ü ◊¢◊ù EXAMPLE.COM")
    print("=" * 40)
    print(f"üéØ URL: {test_url}")
    
    try:
        downloader = TextFileDownloader(test_url, "test_downloads")
        downloader.crawl_and_download(
            max_depth=1, 
            delay=0.5, 
            extract_page_content=True
        )
        
        print("‚úÖ –¢–µ—Å—Ç —Å example.com –∑–∞–≤–µ—Ä—à–µ–Ω")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False


def main():
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í –ó–ê–ì–†–£–ó–ß–ò–ö–ê")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
    success1 = test_basic_functionality()
    
    # –¢–µ—Å—Ç 2: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–∞–π—Ç
    success2 = test_with_alternative_url()
    
    # –ò—Ç–æ–≥–∏
    print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–û–í")
    print("=" * 50)
    print(f"‚úÖ –¢–µ—Å—Ç httpbin.org: {'–ü–†–û–ô–î–ï–ù' if success1 else '–ü–†–û–í–ê–õ–ï–ù'}")
    print(f"‚úÖ –¢–µ—Å—Ç example.com: {'–ü–†–û–ô–î–ï–ù' if success2 else '–ü–†–û–í–ê–õ–ï–ù'}")
    
    if success1 or success2:
        print("\nüéâ –ó–∞–≥—Ä—É–∑—á–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –Ω–∞ –¥—Ä—É–≥–∏—Ö —Å–∞–π—Ç–∞—Ö.")
        print("\nüí° –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞ chabad.org –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å selenium_downloader.py (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ChromeDriver)")
        print("   - –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π —Å–∞–π—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è")
        print("   - –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å VPN –∏–ª–∏ –¥—Ä—É–≥–æ–π IP-–∞–¥—Ä–µ—Å")
    else:
        print("\n‚ö†Ô∏è –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.")


if __name__ == "__main__":
    main()
